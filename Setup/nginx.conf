# nginx.conf

user nginx;  
worker_processes 1;

error_log /var/log/nginx/error.log warn;  
pid /var/run/nginx.pid;


events {  
  worker_connections 1024;
}


http {  
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  upstream fyleo_app {
    server app-web; # app server
    keepalive 8;
  } 
  
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /dev/stdout main;
  sendfile on;
  keepalive_timeout 65;

  server {
    # redirect from http to https
    listen 80;
    server_name  _;
    client_max_body_size 100M;
    return 301 https://$host$request_uri;
  }

  server {
    listen              443 ssl;
    server_name         intern.s-gartl.at;
    ssl_certificate     /etc/letsencrypt/live/intern.s-gartl.at/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/intern.s-gartl.at/privkey.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";

    client_max_body_size 100M;

    location ^~ /.well-known/ {
        # allow LE to validate the domain
        root   /usr/share/nginx/html;
        allow all;
    }

    location / {
      proxy_pass http://fyleo_app;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;
    }
  }
}